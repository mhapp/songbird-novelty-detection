function yT = updateC_v5(wT, mT, xT, changeThresh)%%%%%% run this for each timestep to update outputs% inputs are:%   wT, weight mat for given timestep%   mT, lateral weight mat for timestep%   xT, input for timestep%   changeThresh - since yT depends on itself, it'll keep updating until it%       converges (and apparently it will) - so try this%% output is:%   yT, output vector for given timestep%% finally, yT, xT are in notation from original chklovskii paper. in pcamn% framework, yT should be cT, and xT should be yT%%%%%n = length(xT); %numInputsm = size(wT,1); %num outchange = 1000;oldY = zeros(m,1);yT = oldY;it = 1;while (change > changeThresh) && (it < 1000)%     y0 = yT;    for i2 = 1:m        t1 = wT(i2,:)*xT;        t2 = mT(i2,:)*yT;                oldY(i2) = yT(i2);                if t1 > t2            yT(i2) = (t1-t2);         else            yT(i2) = 0;        end    end        newChange = 0;    for i2 = 1:m        thisTerm = (oldY(i2) - yT(i2)).^2;        newChange = newChange + thisTerm;    end    change = newChange; %set some convergence        it = it + 1;end% disp(['it: ' num2str(it)])end